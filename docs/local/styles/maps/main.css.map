{"version":3,"sources":["grid/container.scss","grid/mixin.breakpoint.scss","helpers/_variables.scss","helpers/_grid.scss","base/_normalize.scss","main.scss"],"names":[],"mappings":"AAAA;EACI;EACA;EACA;;;ACsEA;ED/DI;IACI,WEHW;;;ADiEnB;ED/DI;IACI,WEHW;;;ADiEnB;ED/DI;IACI,WEHW;;;ADmBnB;EDjBI;IACI,WEHW;;;ACFvB;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AFHE;AEGF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AFHE;AEGF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AFHE;AEGF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AFHE;AEGF;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AC9BF;AAAA;AAAA;EAGC;;;AAGD;EACC;EACA;EACG;;;AAGJ;EACC;;;AAGD;EACC;EACA;EACA,OFFa;EEGb;EACA,kBFHa;;;AEMd;AAAA;EAEC;;;AAGD;EACC;;;AAGD;EACI;;;AAGJ;EACI;EACA;;;AAGJ;AAAA;EAEC;;;AAGD;EACC;;;AAGD;AAAA;EAEC;EACA;EACA;EACA;;;AAGD;EACC;;;AAGD;EACC;;;AAGD;EACI,OFnDU;EEoDV;EACA;EACA;;;AAGJ;EACC,OF1Da;EE2Db;;;AAGD;EACC;EACA;;;AAGD;EACC;EACA;;;AAGD;EACI;EACA;;;AAGJ;EACC;;;AAGD;EACC;;;AAGD;AAAA;AAAA;AAAA;AAAA;EAKI;EACA;EACA;EACA;EACA;;;AAGJ;AAAA;EAEC;;;AAGD;AAAA;EAEC;;;AAGD;EACC;;;AAGD;AAAA;AAAA;AAAA;EAIC;;;AAGD;AAAA;EAEC;EACA;;;AAGD;EACC;EACA;;;AC3HD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA","file":"../main.css","sourcesContent":[".container {\n    width: 100%;\n    padding: 0 calc($gutter / 2);\n    margin: auto;\n}\n\n@each $breakpoint, $container-max-width in $container-max-widths\n{\n    @include media-breakpoint-only($breakpoint, $grid-breakpoints)\n    {\n        .container {\n            max-width: $container-max-width;\n        }\n    }\n}","@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints))\n{\n    $n: index($breakpoint-names, $name);\n    @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints)\n{\n    $min: map-get($breakpoints, $name);\n    @return if($min != 0, $min, null);\n}\n\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints)\n{\n    $next: breakpoint-next($name, $breakpoints);\n    @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints)\n{\n    @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints)\n{\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints)\n{\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints)\n{\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints)\n{\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}","$grid-breakpoints: (\n    xs: 0,\n    sm: 576px,\n    md: 768px,\n    lg: 992px,\n    xl: 1200px\n);\n\n$container-max-widths: (\n    sm: 540px,\n    md: 720px,\n    lg: 960px,\n    xl: 1140px\n);\n\n$gutter: 30px;\n\n$color-black: #000;\n$color-white: #FFF;","@import \"./grid/mixin.breakpoint\";\n\n//@import \"./grid/ms/grid.ms\";\n\n@import \"./grid/container\";\n\n/* .row {\n    display: flex;\n    flex-wrap: wrap;\n    margin: 0 (-$gutter / 2);\n}\n\n.no-gutters {\n    margin: 0;\n}\n\n.no-gutters > .col,\n.no-gutters > [class*=\"col-\"] {\n    padding: 0;\n} */\n\n//@import \"./grid/col\";\n//@import \"./grid/order\";\n//@import \"./grid/offset\";\n\n@each $breakpoint in map-keys($grid-breakpoints)\n{\n    @include media-breakpoint-up($breakpoint)\n    {\n        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n  /*\n        .d#{$infix}-none { display: none !important; }\n        .d#{$infix}-inline { display: inline !important; }\n        .d#{$infix}-inline-block { display: inline-block !important; }\n        .d#{$infix}-block { display: block !important; }\n        .d#{$infix}-flex { display: flex !important; }\n\n        .d#{$infix}-table { display: table !important; }\n        .d#{$infix}-table-row { display: table-row !important; }\n        .d#{$infix}-table-cell { display: table-cell !important; }\n        .d#{$infix}-inline-flex { display: inline-flex !important; }\n\n\t\t.flex#{$infix}-row            { flex-direction: row !important; }\n        .flex#{$infix}-column         { flex-direction: column !important; }\n        .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }\n        .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }\n\n        .flex#{$infix}-wrap         { flex-wrap: wrap !important; }\n        .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }\n        .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }\n        .flex#{$infix}-fill         { flex: 1 1 auto !important; }\n        .flex#{$infix}-grow-0       { flex-grow: 0 !important; }\n        .flex#{$infix}-grow-1       { flex-grow: 1 !important; }\n        .flex#{$infix}-shrink-0     { flex-shrink: 0 !important; }\n        .flex#{$infix}-shrink-1     { flex-shrink: 1 !important; }\n\n        .justify-content#{$infix}-start   { justify-content: flex-start !important; }\n        .justify-content#{$infix}-end     { justify-content: flex-end !important; }\n        .justify-content#{$infix}-center  { justify-content: center !important; }\n        .justify-content#{$infix}-between { justify-content: space-between !important; }\n        .justify-content#{$infix}-around  { justify-content: space-around !important; }\n\n        .align-items#{$infix}-start    { align-items: flex-start !important; }\n        .align-items#{$infix}-end      { align-items: flex-end !important; }\n        .align-items#{$infix}-center   { align-items: center !important; }\n        .align-items#{$infix}-baseline { align-items: baseline !important; }\n        .align-items#{$infix}-stretch  { align-items: stretch !important; }\n\n        .align-content#{$infix}-start   { align-content: flex-start !important; }\n        .align-content#{$infix}-end     { align-content: flex-end !important; }\n        .align-content#{$infix}-center  { align-content: center !important; }\n        .align-content#{$infix}-between { align-content: space-between !important; }\n        .align-content#{$infix}-around  { align-content: space-around !important; }\n        .align-content#{$infix}-stretch { align-content: stretch !important; }\n\n        .align-self#{$infix}-auto     { align-self: auto !important; }\n        .align-self#{$infix}-start    { align-self: flex-start !important; }\n        .align-self#{$infix}-end      { align-self: flex-end !important; }\n        .align-self#{$infix}-center   { align-self: center !important; }\n        .align-self#{$infix}-baseline { align-self: baseline !important; }\n        .align-self#{$infix}-stretch  { align-self: stretch !important; }\n\n        .text#{$infix}-left   { text-align: left !important; }\n        .text#{$infix}-right  { text-align: right !important; }\n        .text#{$infix}-center { text-align: center !important; }\n\n        .position#{$infix}-fixed { position: fixed !important; }\n        .position#{$infix}-static { position: static !important; }\n        .position#{$infix}-absolute { position: absolute !important; }\n        .position#{$infix}-relative { position: relative !important; }*/\n    }\n}","*,\n*::before,\n*::after {\n\tbox-sizing: border-box;\n}\n\nhtml {\n\tfont-family: sans-serif;\n\tline-height: 1.15;\n    width: 100%;\n}\n\narticle, aside, figcaption, figure, footer, header, hgroup, main, nav, section {\n\tdisplay: block;\n}\n\nbody {\n\tmargin: 0;\n\tfont: 400 20px/1.3 Arial, sans-serif;\n\tcolor: $color-black;\n\ttext-align: left;\n\tbackground-color: $color-white;\n}\n\nh1, h2, h3, h5, h6,\n.h1, .h2, .h3, .h5, .h6 {\n\tmargin: 0 0 1.5rem;\n}\n\np {\n\tmargin: 0 0 10pt;\n}\n\nol {\n    padding: 0 0 0 20px;\n}\n\nul {\n    margin: 0;\n    padding: 0;\n}\n\nb,\nstrong {\n\tfont-weight: 600;\n}\n\nsmall {\n\tfont-size: 80%;\n}\n\nsub,\nsup {\n\tposition: relative;\n\tfont-size: 75%;\n\tline-height: 0;\n\tvertical-align: baseline;\n}\n\nsub {\n\tbottom: -.25em;\n}\n\nsup {\n\ttop: -.5em;\n}\n\na {\n    color: $color-black;\n    text-decoration: none;\n    outline: none;\n    transition: .5s;\n}\n\na:hover {\n\tcolor: $color-black;\n\ttext-decoration: none;\n}\n\nimg {\n\tmax-width: 100%;\n\theight: auto;\n}\n\nsvg {\n\toverflow: hidden;\n\tvertical-align: middle;\n}\n\nlabel {\n    display: block;\n    margin: 0;\n}\n\nbutton {\n\tborder-radius: 0;\n}\n\nbutton:focus {\n\toutline: 1px dotted;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n    margin: 0;\n    font-family: inherit;\n    font-size: inherit;\n    line-height: inherit;\n    outline: none;\n}\n\nbutton,\ninput {\n\toverflow: visible;\n}\n\nbutton,\nselect {\n\ttext-transform: none;\n}\n\nselect {\n\tword-wrap: normal;\n}\n\nbutton:not(:disabled),\n[type=\"button\"]:not(:disabled),\n[type=\"reset\"]:not(:disabled),\n[type=\"submit\"]:not(:disabled) {\n\tcursor: pointer;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n\tbox-sizing: border-box;\n\tpadding: 0;\n}\n\ntextarea {\n\toverflow: auto;\n\tresize: vertical;\n}","//@import \"../../node_modules/swiper/swiper\";\n//@import \"../../node_modules/@fancyapps/ui/src/Fancybox/Fancybox.scss\";\n\n// Переменные, миксины, функции\n@import \"helpers/variables\";\n@import \"helpers/mixins\";\n@import \"helpers/functions\";\n@import \"helpers/grid\";\n\n// CSS-файлы библиотек\n@import \"vendor/libs\";\n\n// Основное\n@import \"base/fonts\";\n@import \"base/normalize\";\n@import \"base/general\";\n\n// БЭМ-блоки\n@import \"../blocks/modules\";\n\n/* \n@include media-breakpoint-only(lg)\n{\n    & {\n\n    }\n}\n*/"]}